#!/bin/bash
#
#PBS -N Si_opt
#PBS -o mpi.out
#PBS -e mpi.err
#PBS -j oe
#PBS -l nodes=1:ppn=8
#PBS -l walltime=24:30:00
#PBS -q submit

module load allintel/default

exe=/public/software/vasp/5.3.5/vasp-impi

# Number of threads per MPI process ...  ! Always 1 for VASP jobs...
NTHREAD=1
# Number of cores requested ...
NCORE="`cat $PBS_NODEFILE | wc -l`"
# Number of MPI processes ...
NPROCS=$(($NCORE/$NTHREAD))

if [ "$NTHREAD"=="1" ]; then
  MKL_SERIAL=YES
else
  MKL_SERIAL=NO
fi

OMP_NUM_THREADS=${NTHREAD}
MKL_NUM_THREADS=${NTHREAD}

export MKL_SERIAL OMP_NUM_THREADS MKL_NUM_THREADS

cd $PBS_O_WORKDIR

echo "## Job $PBS_JOBNAME : $PBS_JOBID start ... "
echo "##   Requested total $NCORE cores "
echo "##   With $NPROCS x $NTHREAD division (MPI process x OpenMP thread)"
echo "##   Running on nodes... "
echo "## ======================================== "
cat $PBS_NODEFILE | uniq -c
echo "## ======================================== "
echo "## Current Date/Time @ Calculation Beginning : `date`"

ionstep=10; iter=1;

while [ $ionstep -gt 1 ]; do
  # run vasp...
  mpirun -np ${NPROCS} $exe >> vasp.log
  # check if ionic relaxation finishes within 1 step
  ionstep="`grep 'E0=' OSZICAR | tail -n 1 - | awk '{print $1;}'`"
  echo "Ionic steps: ${ionstep}"
  if [ $ionstep -gt 1 ]; then
    # if ionic relaxation took more than 1 step ...
    # save this iteration...
    mv OSZICAR OSZICAR_${iter}
    mv POSCAR POSCAR_${iter}
    cp CONTCAR POSCAR
  fi
  # increase iteration number
  iter=$(($iter+1))
  # sleep for 10 secs in case of faulty MPIs
  sleep 10
done

echo "Finishing date/time: `date`"
echo "Job done..."
